"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var Core = (function () {
    function Core(resolver) {
        this.resolver = resolver;
        this.components = new Array();
    }
    Core.prototype.LoadComponent = function (selector) {
        var factories = Array.from(this.resolver['_factories'].values());
        var component = factories.find(function (item) { return item.selector === selector; });
        if (component) {
            this.clearComponent();
            this.selector = selector;
            var factory = this.resolver.resolveComponentFactory(component.componentType);
            var created = this.viewChild.createComponent(factory);
            this.components.push(created);
        }
    };
    Core.prototype.LoadComponents = function (selectors) {
        var _this = this;
        this.selector = "Multiple";
        selectors.forEach(function (selector) {
            var factories = Array.from(_this.resolver['_factories'].values());
            var component = factories.find(function (item) { return item.selector === selector; });
            if (component) {
                var factory = _this.resolver.resolveComponentFactory(component.componentType);
                var created = _this.viewChild.createComponent(factory);
                _this.components.push(created);
            }
        });
    };
    Core.prototype.clearComponent = function () {
        this.selector = "";
        this.components.forEach(function (component) {
            component.destroy();
        });
    };
    Core.prototype.DateToNumber = function (date) {
        var dt = new Date();
        var strDate = date.getFullYear() + this.az(date.getMonth() + 1) + this.az(date.getDate()) + this.az(dt.getHours()) + this.az(dt.getMinutes()) + this.az(dt.getSeconds());
        return parseInt(strDate);
    };
    Core.prototype.DateToKeyDay = function (date) {
        var strDate = date.getFullYear() + this.az(date.getMonth() + 1) + this.az(date.getDate());
        return parseInt(strDate);
    };
    Core.prototype.DateToKeyMonth = function (date) {
        var strDate = date.getFullYear() + this.az(date.getMonth() + 1);
        return parseInt(strDate);
    };
    Core.prototype.NumberToDate = function (num) {
        var val = num.toString();
        var year = parseInt(val.substring(0, 4));
        var month = parseInt(val.substring(4, 6));
        var day = parseInt(val.substring(6, 8));
        var hour = parseInt(val.substring(8, 10));
        var minute = parseInt(val.substring(10, 12));
        var second = parseInt(val.substring(12, 14));
        return new Date(year, month - 1, day, hour, minute, second);
    };
    Core.prototype.KeyDayToDate = function (keyDay) {
        return this.NumberToDate(parseInt(keyDay + '000000'));
    };
    Core.prototype.az = function (val) {
        var num = val.toString();
        if (num.length < 2)
            num = "0" + num;
        return num;
    };
    Core = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [core_1.ComponentFactoryResolver])
    ], Core);
    return Core;
}());
exports.Core = Core;
//# sourceMappingURL=data:application/json;base64,